name: Build and Deploy Code

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  job1:
    env:
      DATABASE_HOSTNAME: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: fastapi_test
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 300
      DATABASE_URL: postgresql://postgres:${{ secrets.DATABASE_PASSWORD }}@postgres:5432/fastapi_test

    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Docker network
        run: |
          docker network create my_network || echo "Network already exists"
      
      - name: Verify Docker network creation
        run: docker network ls

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python version 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install all dependencies
        run: pip install -r requirements.txt

      - name: Start PostgreSQL service
        run: |
          docker run -d \
          --name postgres \
          --network my_network \
          -p 5433:5432 \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
          -e POSTGRES_DB=fastapi_test \
          --cpus="1" \
          --memory="1g" \
          --health-cmd "pg_isready -U postgres" \
          --health-interval 10s \
          --health-timeout 10s \
          --health-retries 10 \
          postgres:13

      - name: Verify PostgreSQL container status
        run: docker ps -a
