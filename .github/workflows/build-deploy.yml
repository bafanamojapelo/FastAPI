name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: Bafana1992
      DATABASE_NAME: fastapi_test
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 300
      DATABASE_URL: postgresql://postgres:Bafana1992@127.0.0.1:5432/fastapi_test

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Bafana1992
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Pulling git repo
        uses: actions/checkout@v3

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python version 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install all dependencies
        run: pip install -r requirements.txt

      - name: Install PostgreSQL client
        run: sudo apt-get install postgresql-client

      - name: Create fastapi_test database
        run: |
          until psql -h 127.0.0.1 -U postgres -c '\l'; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done
          psql -h 127.0.0.1 -U postgres -c 'CREATE DATABASE fastapi_test;'

      - name: Test with pytest
        run: |
          pip install pytest
          pytest --disable-warnings -q

      - name: Check PostgreSQL status
        run: docker ps -a