name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
        ports:
         - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3  # Updated to v3
      
      - name: install python version 3.9
        uses: actions/setup-python@v3  # Updated to v3
        with: 
          python-version: "3.9"
      
      - name: update pip
        run: python -m pip install --upgrade pip
      
      - name: install all dependencies
        run: pip install -r requirements.txt

      - name: install httpx
        run: pip install httpx

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432
            if [ $? -eq 0 ]; then
              echo "Postgres is ready"
              break
            else
              echo "Waiting for Postgres..."
              sleep 5
            fi
          done

      - name: Set up test database
        env:
          PGPASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          psql -h localhost -U postgres -p 5432 -c "CREATE DATABASE your_test_database_name;"
          psql -h localhost -U postgres -p 5432 -c "GRANT ALL PRIVILEGES ON DATABASE your_test_database_name TO postgres;"
      
      - name: test with pytest
        run: |
          pip install pytest
          pytest
